MariaDB [TASK10]> CREATE TABLE Customers (
    ->     customer_id INT AUTO_INCREMENT PRIMARY KEY,
    ->     name VARCHAR(100) NOT NULL,
    ->     email VARCHAR(100) UNIQUE NOT NULL,
    ->     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    -> );
Query OK, 0 rows affected (0.011 sec)

MariaDB [TASK10]> 
MariaDB [TASK10]> CREATE TABLE Products (
    ->     product_id INT AUTO_INCREMENT PRIMARY KEY,
    ->     name VARCHAR(100) NOT NULL,
    ->     price DECIMAL(10,2) NOT NULL,
    ->     stock INT NOT NULL CHECK (stock >= 0)
    -> );
Query OK, 0 rows affected (0.005 sec)

MariaDB [TASK10]> 
MariaDB [TASK10]> CREATE TABLE Orders (
    ->     order_id INT AUTO_INCREMENT PRIMARY KEY,
    ->     customer_id INT,
    ->     order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ->     status ENUM('Pending', 'Completed', 'Cancelled') DEFAULT 'Pending',
    ->     FOREIGN KEY (customer_id) REFERENCES Customers(customer_id) ON DELETE CASCADE
    -> );
Query OK, 0 rows affected (0.005 sec)

MariaDB [TASK10]> 
MariaDB [TASK10]> CREATE TABLE OrderDetails (
    ->     order_detail_id INT AUTO_INCREMENT PRIMARY KEY,
    ->     order_id INT,
    ->     product_id INT,
    ->     quantity INT CHECK (quantity > 0),
    ->     subtotal DECIMAL(10,2),
    ->     FOREIGN KEY (order_id) REFERENCES Orders(order_id) ON DELETE CASCADE,
    ->     FOREIGN KEY (product_id) REFERENCES Products(product_id)
    -> );
Query OK, 0 rows affected (0.006 sec)

MariaDB [TASK10]> CREATE INDEX idx_customers_email ON Customers(email);
Query OK, 0 rows affected (0.015 sec)
Records: 0  Duplicates: 0  Warnings: 0

MariaDB [TASK10]> CREATE INDEX idx_orders_customer ON Orders(customer_id);
Query OK, 0 rows affected (0.006 sec)
Records: 0  Duplicates: 0  Warnings: 0

MariaDB [TASK10]> CREATE INDEX idx_orderdetails_order ON OrderDetails(order_id);
Query OK, 0 rows affected (0.009 sec)
Records: 0  Duplicates: 0  Warnings: 0

MariaDB [TASK10]> CREATE INDEX idx_orderdetails_product ON OrderDetails(product_id);
Query OK, 0 rows affected (0.007 sec)
Records: 0  Duplicates: 0  Warnings: 0

MariaDB [TASK10]> DELIMITER //
MariaDB [TASK10]> 
MariaDB [TASK10]> CREATE TRIGGER reduce_stock AFTER INSERT ON OrderDetails
    -> FOR EACH ROW
    -> BEGIN
    ->     UPDATE Products
    ->     SET stock = stock - NEW.quantity
    ->     WHERE product_id = NEW.product_id;
    -> END //
Query OK, 0 rows affected (0.010 sec)

MariaDB [TASK10]> 
MariaDB [TASK10]> DELIMITER ;
MariaDB [TASK10]> DELIMITER //
MariaDB [TASK10]> 
MariaDB [TASK10]> CREATE PROCEDURE PlaceOrder(IN cust_id INT, IN prod_id INT, IN qty INT)
    -> BEGIN
    ->     DECLARE total_price DECIMAL(10,2);
    -> 
    ->     -- Start Transaction
    ->     START TRANSACTION;
    -> 
    ->     -- Check stock availability
    ->     IF (SELECT stock FROM Products WHERE product_id = prod_id) >= qty THEN
    -> 
    ->         -- Insert into Orders table
    ->         INSERT INTO Orders (customer_id) VALUES (cust_id);
    ->         SET @order_id = LAST_INSERT_ID();
    -> 
    ->         -- Insert into OrderDetails table
    ->         INSERT INTO OrderDetails (order_id, product_id, quantity, subtotal)
    ->         VALUES (@order_id, prod_id, qty, (SELECT price FROM Products WHERE product_id = prod_id) * qty);
    -> 
    ->         -- Commit transaction
    ->         COMMIT;
    ->     ELSE
    ->         -- Rollback if stock is insufficient
    ->         ROLLBACK;
    ->     END IF;
    -> END //
Query OK, 0 rows affected (0.011 sec)

MariaDB [TASK10]> 
MariaDB [TASK10]> DELIMITER ;
MariaDB [TASK10]> INSERT INTO Customers (name, email) VALUES
    -> ('Person1', 'person1@example.com'),
    -> ('Person2', 'person2@example.com'),
    -> ('Person3', 'person3@example.com'),
    -> ('Person4', 'person4@example.com'),
    -> ('Person5', 'person5@example.com');
Query OK, 5 rows affected (0.007 sec)
Records: 5  Duplicates: 0  Warnings: 0

MariaDB [TASK10]> INSERT INTO Products (name, price, stock) VALUES
    -> ('Laptop', 75000.00, 10),
    -> ('Smartphone', 45000.00, 15),
    -> ('Headphones', 3000.00, 50),
    -> ('Monitor', 12000.00, 20),
    -> ('Keyboard', 2000.00, 30);
Query OK, 5 rows affected (0.007 sec)
Records: 5  Duplicates: 0  Warnings: 0

MariaDB [TASK10]> INSERT INTO Orders (customer_id, status) VALUES
    -> (1, 'Pending'),
    -> (2, 'Completed'),
    -> (3, 'Pending'),
    -> (4, 'Cancelled'),
    -> (5, 'Completed');
Query OK, 5 rows affected (0.007 sec)
Records: 5  Duplicates: 0  Warnings: 0

MariaDB [TASK10]> INSERT INTO OrderDetails (order_id, product_id, quantity, subtotal) VALUES
    -> (1, 1, 1, 75000.00),  -- Person1 buys 1 Laptop
    -> (2, 2, 2, 90000.00),  -- Person2 buys 2 Smartphones
    -> (3, 3, 3, 9000.00),   -- Person3 buys 3 Headphones
    -> (4, 4, 1, 12000.00),  -- Person4 buys 1 Monitor
    -> (5, 5, 5, 10000.00);  -- Person5 buys 5 Keyboards
Query OK, 5 rows affected (0.008 sec)
Records: 5  Duplicates: 0  Warnings: 0

MariaDB [TASK10]> SELECT * FROM Customers;
+-------------+---------+---------------------+---------------------+
| customer_id | name    | email               | created_at          |
+-------------+---------+---------------------+---------------------+
|           1 | Person1 | person1@example.com | 2025-03-30 15:07:24 |
|           2 | Person2 | person2@example.com | 2025-03-30 15:07:24 |
|           3 | Person3 | person3@example.com | 2025-03-30 15:07:24 |
|           4 | Person4 | person4@example.com | 2025-03-30 15:07:24 |
|           5 | Person5 | person5@example.com | 2025-03-30 15:07:24 |
+-------------+---------+---------------------+---------------------+
5 rows in set (0.001 sec)

MariaDB [TASK10]> SELECT * FROM Products;
+------------+------------+----------+-------+
| product_id | name       | price    | stock |
+------------+------------+----------+-------+
|          1 | Laptop     | 75000.00 |     9 |
|          2 | Smartphone | 45000.00 |    13 |
|          3 | Headphones |  3000.00 |    47 |
|          4 | Monitor    | 12000.00 |    19 |
|          5 | Keyboard   |  2000.00 |    25 |
+------------+------------+----------+-------+
5 rows in set (0.000 sec)

MariaDB [TASK10]> SELECT * FROM Orders;
+----------+-------------+---------------------+-----------+
| order_id | customer_id | order_date          | status    |
+----------+-------------+---------------------+-----------+
|        1 |           1 | 2025-03-30 15:07:33 | Pending   |
|        2 |           2 | 2025-03-30 15:07:33 | Completed |
|        3 |           3 | 2025-03-30 15:07:33 | Pending   |
|        4 |           4 | 2025-03-30 15:07:33 | Cancelled |
|        5 |           5 | 2025-03-30 15:07:33 | Completed |
+----------+-------------+---------------------+-----------+
5 rows in set (0.000 sec)

MariaDB [TASK10]> SELECT * FROM OrderDetails;
+-----------------+----------+------------+----------+----------+
| order_detail_id | order_id | product_id | quantity | subtotal |
+-----------------+----------+------------+----------+----------+
|               1 |        1 |          1 |        1 | 75000.00 |
|               2 |        2 |          2 |        2 | 90000.00 |
|               3 |        3 |          3 |        3 |  9000.00 |
|               4 |        4 |          4 |        1 | 12000.00 |
|               5 |        5 |          5 |        5 | 10000.00 |
+-----------------+----------+------------+----------+----------+
5 rows in set (0.000 sec)

MariaDB [TASK10]> 

